AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Emblematic deployment. Environment:

  Cloud Formation deployment for lambda functions, bucket S3 and RDS instance
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst

Resources:
  Bucket1:
    Type: 'AWS::S3::Bucket'
  addChildrenToAssets:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: index.handler
      Runtime: nodejs8.10
      CodeUri: code/addChildrenToAssets/
      Description: ''
      MemorySize: 128
      Timeout: 60
      Role: 'arn:aws:iam::013058818715:role/reachLambdaRole'
      Layers:
        - !Ref DependanciesNodeJSLayer
  DBQuery:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: index.handler
      Runtime: nodejs8.10
      CodeUri: code/DBQuery/
      Description: ''
      MemorySize: 128
      Timeout: 180
      Role: 'arn:aws:iam::013058818715:role/reachLambdaRole'
      Layers:
        - !Ref DependanciesNodeJSLayer
  deleteAsset:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: index.handler
      Runtime: nodejs8.10
      CodeUri: code/deleteAsset/
      Description: ''
      MemorySize: 128
      Timeout: 3
      Role: 'arn:aws:iam::013058818715:role/reachLambdaRole'
      Layers:
        - !Ref DependanciesNodeJSLayer
  getConfig:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: index.handler
      Runtime: nodejs8.10
      CodeUri: code/getConfig/
      Description: ''
      MemorySize: 128
      Timeout: 30
      Role: 'arn:aws:iam::013058818715:role/reachLambdaRole'
      Layers:
        - !Ref DependanciesNodeJSLayer
  moveVideo:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: index.handler
      Runtime: nodejs8.10
      CodeUri: code/moveVideo/
      Description: ''
      MemorySize: 512
      Timeout: 300
      Role: 'arn:aws:iam::013058818715:role/reachLambdaRole'
      Layers:
        - !Ref DependanciesNodeJSLayer
  onVideoTranscoded:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: index.handler
      Runtime: nodejs8.10
      CodeUri: code/onVideoTranscoded/
      Description: ''
      MemorySize: 512
      Timeout: 900
      Role: 'arn:aws:iam::013058818715:role/reachLambdaRole'
      Events:
        BucketEvent1:
          Type: S3
          Properties:
            Bucket:
              Ref: Bucket1
            Events:
              - 's3:ObjectCreated:*'
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: outputs/
      Layers:
        - !Ref DependanciesNodeJSLayer
  sendNotification:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: index.handler
      Runtime: nodejs8.10
      CodeUri: code/sendNotification/
      Description: ''
      MemorySize: 128
      Timeout: 60
      Role: 'arn:aws:iam::013058818715:role/reachLambdaRole'
      Layers:
        - !Ref DependanciesNodeJSLayer
  test:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: index.handler
      Runtime: nodejs10.x
      CodeUri: code/test/
      Description: ''
      MemorySize: 128
      Timeout: 60
      Role: 'arn:aws:iam::013058818715:role/reachLambdaRole'
      Environment:
        Variables:
          DEV_myVar: '0'
          PROD_myVar: '2'
          STAGING_myVar: '1'
      Layers:
        - !Ref DependanciesNodeJSLayer
  transcodeVideo:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: index.handler
      Runtime: nodejs8.10
      CodeUri: code/transcodeVideo/
      Description: ''
      MemorySize: 256
      Timeout: 300
      Role: 'arn:aws:iam::013058818715:role/reachLambdaRole'
      Events:
        BucketEvent1:
          Type: S3
          Properties:
            Bucket:
              Ref: Bucket1
            Events:
              - 's3:ObjectCreated:*'
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: inputs/
      Layers:
        - !Ref DependanciesNodeJSLayer
  unzip:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: index.handler
      Runtime: nodejs8.10
      CodeUri: code/transcodeVideo/
      Description: ''
      MemorySize: 2048
      Timeout: 421
      Role: 'arn:aws:iam::013058818715:role/reachLambdaRole'
      Layers:
        - !Ref DependanciesNodeJSLayer


  EmblematicDB: 
    Type: "AWS::RDS::DBInstance"
    Properties:
      DBInstanceIdentifier: robot-reach-instance-cf
      DBSnapshotIdentifier: arn:aws:rds:eu-north-1:013058818715:snapshot:empty-robot-reach-final-snapshot
      DeletionProtection: True
      Engine: "postgres"
  
  DependanciesNodeJSLayer:
        Type: AWS::Serverless::LayerVersion
        Properties:
            LayerName: lambda-functions-dependencies
            ContentUri: dependencies/
            CompatibleRuntimes:
              - nodejs8.10
              - nodejs10.x
            LicenseInfo: 'MIT'
            RetentionPolicy: Retain

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HelloWorldApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  HelloWorldFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HelloWorldFunctionRole.Arn
  EmblematicDB:
    Description: InstanceId of the newly created RDS Instance
    Value: !Ref EmblematicDB 
